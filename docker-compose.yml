version: "3.8"

services:
  nginx:
    image: nginx:${NGINX_VERSION}
    container_name: nginx
    env_file:
      - .env
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./certbot:/var/www/certbot
      - ${AVOIN_LOGS_PATH}:/var/log/nginx
      - ./nginx/templates:/etc/nginx/templates
      - ${CERT_DIR}/fullchain.pem:${CERT_DIR}/fullchain.pem
      - ${CERT_DIR}/privkey.pem:${CERT_DIR}/privkey.pem
    networks:
      - proxy-net
    restart: unless-stopped

  postgis:
    image: kartoza/postgis:${POSTGRES_VERSION}
    container_name: postgis
    env_file:
      - .env
    volumes:
      - ${CERT_DIR}/fullchain.pem:${CERT_DIR}/fullchain.pem
      - ${CERT_DIR}/privkey.pem:${CERT_DIR}/privkey.pem
      - ${CERT_DIR}/server.crt:${CERT_DIR}/server.crt
      - /mnt/postgis-data:/var/lib/postgresql
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - FORCE_SSL=FALSE
      - SSL_DIR=${CERT_DIR}
      - SSL_CERT_FILE=${CERT_DIR}/fullchain.pem
      - SSL_KEY_FILE=${CERT_DIR}/privkey.pem
      - SSL_CA_FILE=${CERT_DIR}/server.crt
    restart: unless-stopped
    healthcheck:
      test: "exit 0"
    networks:
      - proxy-net
    shm_size: ${POSTGRES_CONTAINER_MEM}
    deploy:
      resources:
        limits:
          memory: ${POSTGRES_CONTAINER_MEM}

  geoserver:
    image: kartoza/geoserver:${GS_VERSION}
    container_name: geoserver
    env_file:
      - .env
    depends_on:
      - postgis
    volumes:
      - ${AVOIN_DATA_PATH}:/data
      - ${GEOSERVER_DATA_PATH}:${GEOSERVER_VOLUME_MOUNT}
    ports:
      - ${GEOSERVER_PORT}:8080
    restart: unless-stopped
    healthcheck:
      test: curl --fail -s http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    networks:
     - proxy-net
    shm_size: ${GEOSERVER_CONTAINER_MEM}
    deploy:
      resources:
        limits:
          memory: ${GEOSERVER_CONTAINER_MEM}

networks:
  proxy-net:
    external: true
